---
apiVersion: v1
kind: Service
metadata:
  name: mico-admin
  namespace: mico-system
  labels:
    run: mico-admin
spec:
  loadBalancerIP: ${MICO_PUBLIC_IP}
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 80
  selector:
    run: mico-admin
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mico-admin-entrypoint
  namespace: mico-system
data:
  entrypoint.sh: |
    #!/bin/sh
    set -e

    echo "MICO Rest Api Url is: ${MICO_REST_API}"

    if [ "$NAMESERVER" == "" ]
    then
        export NAMESERVER=$(awk '/^nameserver/{print $2}' /etc/resolv.conf)
    fi

    echo "Nameserver is:" $NAMESERVER

    envsubst '$NAMESERVER ${MICO_REST_API}' < /etc/nginx/nginx.conf > /etc/nginx/nginx.conf.new
    mv /etc/nginx/nginx.conf.new /etc/nginx/nginx.conf
    echo "done replacing"

    cat /etc/nginx/nginx.conf

    exec "$@"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mico-admin
  namespace: mico-system
spec:
  selector:
    matchLabels:
      run: mico-admin
  replicas: 1
  template:
    metadata:
      namespace: mico-system
      labels:
        run: mico-admin
    spec:
      containers:
        - name: mico-admin
          image: ustmico/mico-admin
          imagePullPolicy: Always
          env:
            - name: MICO_REST_API
              value: 'mico-core.mico-system.svc.cluster.local:8080'
          ports:
            - containerPort: 80
          volumeMounts:
            - name: entrypoint-volume
              mountPath: /docker-entrypoint.sh
              subPath: entrypoint.sh
      volumes:
        - name: entrypoint-volume
          configMap:
            name: mico-admin-entrypoint
            defaultMode: 0755
